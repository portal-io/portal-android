apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"

    lintOptions{
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    defaultConfig {
        applicationId "com.snailvr.manager"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 2018052401
        multiDexEnabled true
        versionName "3.4.5"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [ moduleName : project.getName(),
                              eventBusIndex : "com.whaley.biz." + project.getName() + ".EventBusIndex"]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    signingConfigs {
        debug {
            // No debug config
            storeFile file("../snailvr.keystore")
            storePassword "3apkrbMKj7"
            keyAlias "snailvr"
            keyPassword "3apkrbMKj7"
            v1SigningEnabled true
            v2SigningEnabled true
        }

        release {
            storeFile file("../snailvr.keystore")
            storePassword "3apkrbMKj7"
            keyAlias "snailvr"
            keyPassword "3apkrbMKj7"
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }
    buildTypes {
        debug {
//            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
            versionNameSuffix "_testdebug"
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
        }

        release {
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"
//            versionNameSuffix "-release"
            // 暂时不混淆
            minifyEnabled false
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release

            def releaseTimeStr;

            android.applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    if (outputFileName != null && outputFileName.endsWith('.apk')) {
                        // 输出apk名称为WhaleyVR_v1.0_2015-01-15_gitcommit_wandoujia.apk
                        if (releaseTimeStr == null) {
                            releaseTimeStr = releaseTime()
                        }
                        System.out.print("releaseTimeStr = "+releaseTimeStr)
                        outputFileName  = "WhaleyVR_v${defaultConfig.versionName}_${releaseTimeStr}.apk"
                    }
                }
            }
        }
    }
    repositories {
        flatDir {
            dirs '../unity/libs'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile rootProject.ext.lib['appcompat-v7']
    testCompile 'junit:junit:4.12'
    compile(rootProject.ext.core['appcontext']){
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.whaley.core'
    }
    compile(rootProject.ext.core['bi']){
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.whaley.core'
    }
    compile(rootProject.ext.core['debug']){
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.whaley.core'
    }
    compile(rootProject.ext.core['image']){
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.whaley.core'
    }
    compile(rootProject.ext.core['inject']){
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.whaley.core'
    }
    compile(rootProject.ext.core['interactor']){
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.whaley.core'
    }
    compile(rootProject.ext.core['local']){
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.whaley.core'
    }
    compile(rootProject.ext.core['network']){
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.whaley.core'
    }
    compile(rootProject.ext.core['repository']){
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.whaley.core'
    }
    compile(rootProject.ext.core['router']){
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.whaley.core'
    }
    compile(rootProject.ext.core['uiframe']) {
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.whaley.core'
    }
    compile(rootProject.ext.core['utils']){
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.whaley.core'
    }
    compile(rootProject.ext.core['widget']) {
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.whaley.core'
    }
    annotationProcessor rootProject.ext.lib['butterknife-processor']
    annotationProcessor rootProject.ext.lib['eventbus-processor']
    compile project(':common')
    compile(project(':program')) {
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.whaley.core'
    }
    compile(project(':user')) {
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.whaley.core'
    }
    compile(project(':setting')) {
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.whaley.core'
    }
    compile(project(':hybrid')) {
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.whaley.core'
    }
    compile(project(':unity')) {
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.whaley.core'
        exclude group: 'com.whaley.biz'
    }
    compile(project(':parser')) {
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.whaley.core'
    }
    compile(project(':pay')) {
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.whaley.core'
    }
    compile(project(':livegift')) {
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.whaley.core'
    }
    compile(project(':danmu')) {
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.whaley.core'
    }
    compile(project(':share')) {
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.whaley.core', module: 'appcontext'
        exclude group: 'com.whaley.core', module: 'network'
        exclude group: 'com.whaley.core', module: 'router'
    }
    compile(project(':data-statistics')) {
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.whaley.core'
    }
    compile project(':download')
    compile project(':playerui')
    compile project(':jpush')
    compile(project(':portal')) {
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.whaley.core'
    }
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.github.markzhai:blockcanary-android:1.5.0'
    compile 'com.tencent.bugly:crashreport_upgrade:1.3.1'
//    compile 'com.tencent.bugly:nativecrashreport:latest.release' //其中latest.release指代最新版本号，也可以指定明确的版本号，例如2.2.0
    annotationProcessor rootProject.ext.lib['arouter-processor']
}

// 依赖插件脚本
apply from: 'tinkerpatch.gradle'

def releaseTime() {
    return new Date().format("yyyy-MM-dd_HH_mm", TimeZone.getTimeZone("PRC"))
//    return ""
}

// 打印耗时的编译任务
apply from: 'buildtime.gradle'

task syncUnityAssets(type: Copy) {
    delete "src/main/assets/bin"
    delete "src/main/assets/Configs"
    delete "src/main/assets/MiVR_sig"
    delete "src/main/assets/Shader"
    from "../unity/bundle"
    into "src/main/assets"
}

task deleteUnityAssets(type: Copy) {
    delete "src/main/assets/bin"
    delete "src/main/assets/Configs"
    delete "src/main/assets/MiVR_sig"
    delete "src/main/assets/Shader"
}

afterEvaluate {
    boolean isDependOnUnity = false;
    tasks.each { task ->
        if (task.name.contains("prepareWhaleyVRUnityUnspecifiedLibrary")) {
            isDependOnUnity = true;
            task.dependsOn(syncUnityAssets)
        }
    }
    if (!isDependOnUnity) {
        tasks.matching {
            it.name.startsWith('process') && (it.name.endsWith('ReleaseJavaRes') || it.name.endsWith
                    ('DebugJavaRes'))
        }.each { task ->
            task.dependsOn(deleteUnityAssets);
        }
    }
}


